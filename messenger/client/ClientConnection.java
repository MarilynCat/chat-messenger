package client;

import server.HiPacket;
import server.Packet;
import server.ByePacket;
import server.WelcomePacket;
import server.ErrorPacket;

import java.io.*;
import java.net.*;
import java.util.concurrent.LinkedBlockingQueue;

public class ClientConnection extends Thread {
    private Socket socket;
    private BufferedReader reader;
    private PrintWriter writer;
    private final LinkedBlockingQueue<Packet> toServerQueue = new LinkedBlockingQueue<>();
    private Thread writerThread;
    private MessageListener messageListener;

    public interface MessageListener {
        void onPacketReceived(Packet packet);
    }

    public ClientConnection(String host, int port, MessageListener listener) throws IOException {
        this.socket = new Socket(host, port);
        this.messageListener = listener;

        reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())), true);

        writerThread = new Thread(() -> {
            try {
                while (!Thread.currentThread().isInterrupted()) {
                    Packet packet = toServerQueue.take();

                    if (socket.isClosed()) {
                        System.out.println("‚ùóÔ∏è [ClientConnection] –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∞–∫–µ—Ç —á–µ—Ä–µ–∑ –∑–∞–∫—Ä—ã—Ç–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.");
                        continue;
                    }

                    System.out.println("üì§ [ClientConnection] –ü–∞–∫–µ—Ç –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π: " + packet.getType());
                    packet.writePacket(writer);
                    writer.flush();
                    System.out.println("‚úÖ [ClientConnection] –ü–∞–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: " + packet.getType());
                }
            } catch (InterruptedException e) {
                System.out.println("üõë [ClientConnection] –ü–æ—Ç–æ–∫ –∑–∞–ø–∏—Å–∏ –ø—Ä–µ—Ä–≤–∞–Ω.");
            } catch (Exception ex) {
                System.out.println("‚ùå [ClientConnection] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∞–∫–µ—Ç–∞: " + ex.getMessage());
                ex.printStackTrace();
            }
        });

        writerThread.start();
    }

    public void sendPacket(Packet packet) {
        if (packet instanceof HiPacket hiPacket) {
            System.out.println("üì§ [ClientConnection] –û—Ç–ø—Ä–∞–≤–∫–∞ HiPacket: login = " + hiPacket.login + ", password = " + hiPacket.password);
        }

        if (socket.isClosed()) {
            System.out.println("‚ùóÔ∏è [ClientConnection] –ü–∞–∫–µ—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ.");
            return;
        }

        try {
            toServerQueue.add(packet);
        } catch (Exception e) {
            System.out.println("‚ùå [ClientConnection] –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–∞–∫–µ—Ç–∞ –≤ –æ—á–µ—Ä–µ–¥—å: " + e.getMessage());
        }
    }

    @Override
    public void run() {
        try {
            while (true) {
                System.out.println("üîé [ClientConnection] –û–∂–∏–¥–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞...");

                Packet packet = Packet.readPacket(reader);

                if (packet == null) {
                    System.out.println("‚ùóÔ∏è [ClientConnection] –ü–∞–∫–µ—Ç –ø—É—Å—Ç–æ–π, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞...");
                    Thread.sleep(300);  // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
                    continue;
                }


                if (packet instanceof WelcomePacket) {
                    System.out.println("‚úÖ [ClientConnection] –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.");
                }

                if (packet instanceof ErrorPacket) {
                    System.out.println("‚ùå [ClientConnection] –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: " + ((ErrorPacket) packet).getMessage());
                    close();
                    break;
                }

                if (messageListener != null) {
                    messageListener.onPacketReceived(packet);
                }
            }
        } catch (Exception e) {
            System.out.println("‚ùå [ClientConnection] –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ø–∞–∫–µ—Ç–∞: " + e.getMessage());
            e.printStackTrace();
        } finally {
            close();
        }
    }


    public void close() {
        try {
            System.out.println("üõë [ClientConnection] –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...");
            writerThread.interrupt();
            socket.close();
        } catch (Exception ex) {
            System.out.println("‚ùå [ClientConnection] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: " + ex.getMessage());
            ex.printStackTrace();
        }
    }
}
