package client;

import client.ClientConnection;
import server.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.Map;

public class ChatWindow extends JFrame {
    private static ChatWindow instance;
    private JTextArea chatArea;
    private JTextField messageField;
    private JList<String> userList;
    private DefaultListModel<String> userListModel;
    private ClientConnection connection;
    private String username;
    private String selectedUser;  // –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    private final Map<String, Integer> userIdMap = new HashMap<>();  // –•—Ä–∞–Ω–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    public ChatWindow(ClientConnection connection, String username) {
        this.connection = connection;
        this.username = username;
        instance = this;

        setTitle("Chat - " + username);
        setSize(700, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        initUI();

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫
        userListModel.addElement("–í—ã: " + username);

        // –í—ã–±–æ—Ä —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –ø–æ –∫–ª–∏–∫—É
        userList.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                String selected = userList.getSelectedValue();
                if (selected != null && !selected.startsWith("–í—ã: ")) {
                    selectedUser = selected;  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
                    chatArea.append("üí¨ –ù–∞—á–∞—Ç –¥–∏–∞–ª–æ–≥ —Å " + selectedUser + "\n");
                }
            }
        });
    }

    private void initUI() {
        chatArea = new JTextArea();
        chatArea.setEditable(false);
        JScrollPane chatScrollPane = new JScrollPane(chatArea);

        userListModel = new DefaultListModel<>();
        userList = new JList<>(userListModel);
        userList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        JScrollPane userScrollPane = new JScrollPane(userList);
        userScrollPane.setPreferredSize(new Dimension(150, 0));

        messageField = new JTextField();
        messageField.addActionListener(e -> sendMessage());

        JButton sendButton = new JButton("Send");
        sendButton.addActionListener(e -> sendMessage());

        JPanel messagePanel = new JPanel(new BorderLayout());
        messagePanel.add(messageField, BorderLayout.CENTER);
        messagePanel.add(sendButton, BorderLayout.EAST);

        add(userScrollPane, BorderLayout.WEST);
        add(chatScrollPane, BorderLayout.CENTER);
        add(messagePanel, BorderLayout.SOUTH);
    }

    private void sendMessage() {
        String text = messageField.getText().trim();
        if (text.isEmpty()) return;

        if (selectedUser == null) {
            chatArea.append("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.\n");
            return;
        }

        if (!userIdMap.containsKey(selectedUser)) {
            chatArea.append("‚ùå –û—à–∏–±–∫–∞: –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.\n");
            return;
        }

        int correspondentId = userIdMap.get(selectedUser);
        if (correspondentId == -1) {
            chatArea.append("‚ùå –û—à–∏–±–∫–∞: –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω.\n");
            return;
        }

        MessagePacket msgPacket = new MessagePacket();
        msgPacket.correspondentId = correspondentId;
        msgPacket.text = text;
        connection.sendPacket(msgPacket);

        displayOutgoingMessage("Me to " + selectedUser + ": " + text);
        messageField.setText("");
    }

    public void displayIncomingPacket(Packet packet) {
        System.out.println("üì© [ChatWindow] –ü–∞–∫–µ—Ç –ø–æ–ª—É—á–µ–Ω: " + packet.getType());

        if (packet instanceof ListPacket) {
            ListPacket listPacket = (ListPacket) packet;
            System.out.println("‚úÖ [ChatWindow] –ü–æ–ª—É—á–µ–Ω ListPacket —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: " + listPacket.items.size());
            updateUserList(listPacket);

            if (listPacket.items.isEmpty()) {
                chatArea.append("‚ùóÔ∏è–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –¥–∏–∞–ª–æ–≥–∞.\n");
            } else {
                for (ListPacket.CorrespondentItem item : listPacket.items) {
                    System.out.println("üü¢ [ChatWindow] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ: " + item.login);
                }
            }

        } else if (packet instanceof EchoPacket) {
            EchoPacket echo = (EchoPacket) packet;
            displayIncomingMessage("Echo: " + echo.text);

        } else if (packet instanceof MessagePacket) {
            MessagePacket msg = (MessagePacket) packet;
            Correspondent sender = Correspondent.getCorrespondent(msg.correspondentId);

            if (sender != null) {
                displayIncomingMessage("üì© " + sender.getLogin() + ": " + msg.text);
            } else {
                displayIncomingMessage("‚ùì –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + msg.text);
            }

        } else {
            displayIncomingMessage("Received: " + packet.getType());
            System.out.println("‚ùóÔ∏è [ChatWindow] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø–∞–∫–µ—Ç–∞: " + packet.getType());
        }
    }

    private void updateUserList(ListPacket listPacket) {
        SwingUtilities.invokeLater(() -> {
            userListModel.clear();
            userListModel.addElement("–í—ã: " + username); // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            userIdMap.clear();  // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ ID –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è

            for (ListPacket.CorrespondentItem item : listPacket.items) {
                if (!item.login.equals(username)) {
                    userListModel.addElement(item.login);
                    userIdMap.put(item.login, item.id); // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    System.out.println("üü¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫: " + item.login);
                }
            }

            if (userIdMap.isEmpty()) {
                chatArea.append("‚ùóÔ∏è–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –¥–∏–∞–ª–æ–≥–∞.\n");
            }
        });
    }

    public void displayIncomingMessage(String message) {
        SwingUtilities.invokeLater(() -> chatArea.append(message + "\n"));
    }

    public void displayOutgoingMessage(String message) {
        SwingUtilities.invokeLater(() -> chatArea.append(message + "\n"));
    }

    public static ChatWindow getInstance() {
        return instance;
    }
}
