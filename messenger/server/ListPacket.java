package server;

import java.io.BufferedReader;
import java.io.PrintWriter;
import java.util.ArrayList;

public class ListPacket extends Packet {
    public static final String type = "LIST";

    public static class CorrespondentItem {
        public int id;
        public String login;

        public CorrespondentItem(int id, String login) {
            this.id = id;
            this.login = login;
        }
    }

    public ArrayList<CorrespondentItem> items = new ArrayList<>();

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫
    public void addItem(int id, String login) {
        if (login != null && !login.trim().isEmpty()) {
            var item = new CorrespondentItem(id, login);
            items.add(item);
        } else {
            System.err.println("‚ùå [ListPacket] –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—É—Å—Ç—ã–º –ª–æ–≥–∏–Ω–æ–º.");
        }
    }

    @Override
    public String getType() {
        return type;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ—Ç–æ–∫
    @Override
    public void writeBody(PrintWriter writer) throws Exception {
        for (var ci : items) {
            writer.println(ci.id);      // –ü–∏—à–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            writer.println(ci.login);   // –ü–∏—à–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        }
        writer.println();  // ‚úÖ –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ—Ç–æ–∫–∞
    @Override
    public void readBody(BufferedReader reader) throws Exception {
        items.clear();  // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
        System.out.println("üîé [ListPacket] –ù–∞—á–∞—Ç–æ —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö...");

        while (true) {
            var firstLine = reader.readLine();
            if (firstLine == null || firstLine.isEmpty()) {  // ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á—Ç–µ–Ω–∏—è
                System.out.println("‚úÖ [ListPacket] –ü—Ä–æ—á–∏—Ç–∞–Ω–æ " + items.size() + " –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.");
                break;
            }

            var secondLine = reader.readLine();
            if (secondLine == null || secondLine.isEmpty()) {
                System.out.println("‚úÖ [ListPacket] –ü—Ä–æ—á–∏—Ç–∞–Ω–æ " + items.size() + " –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.");
                break;
            }

            try {
                int id = Integer.parseInt(firstLine);
                addItem(id, secondLine);
                System.out.println("üë§ [ListPacket] –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + secondLine);
            } catch (NumberFormatException e) {
                System.err.println("‚ùå [ListPacket] –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + e.getMessage());
            }
        }
    }
}