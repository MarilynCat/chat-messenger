package server;

import java.io.*;
import java.util.*;
import java.util.function.*;

public abstract class Packet {
    private static final String END_MARKER = "###END###";

    private static final Map<String, Function<String, Packet>> typeMap = Map.of(
            EchoPacket.type, s -> new EchoPacket(),
            HiPacket.type, s -> new HiPacket(),
            ByePacket.type, s -> new ByePacket(),
            MessagePacket.type, s -> new MessagePacket(),
            ListPacket.type, s -> new ListPacket(),
            WelcomePacket.type, s -> new WelcomePacket(),
            ErrorPacket.type, ErrorPacket::new  // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
    );

    public abstract String getType();

    public abstract void writeBody(PrintWriter writer) throws Exception;

    public abstract void readBody(BufferedReader reader) throws Exception;

    // ‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤ –º–µ—Ç–æ–¥–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
    public void writePacket(PrintWriter writer) {
        if (this instanceof MessagePacket msg) {
            writer.println("MESSAGE");
            writer.println("From: " + msg.senderId);
            writer.println("To: " + msg.correspondentId);
            writer.println("Text: " + msg.text);
            writer.println("###END###");
        }
    }


    public static Packet readPacket(BufferedReader reader) {
        try {
            if (reader == null) {
                System.out.println("‚ùå [Packet] –û—à–∏–±–∫–∞: –ü–æ—Ç–æ–∫ —á—Ç–µ–Ω–∏—è = null.");
                return null;
            }

            // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≥–æ—Ç–æ–≤ –ª–∏ –ø–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö
            if (!reader.ready()) {
                System.out.println("‚ùóÔ∏è [Packet] –ü–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –≥–æ—Ç–æ–≤ –∫ —á—Ç–µ–Ω–∏—é.");
                return null;
            }

            var type = reader.readLine();
            System.out.println("üîç [Packet] –ü—Ä–æ—á–∏—Ç–∞–Ω–æ –∏–∑ –ø–æ—Ç–æ–∫–∞: '" + type + "'");

            if (type == null || type.isEmpty()) {
                System.out.println("‚ùå [Packet] –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ –∫–æ–Ω–µ—Ü –ø–æ—Ç–æ–∫–∞. –ü–∞–∫–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω.");
                return null;
            }

            var packetSupplier = typeMap.get(type.trim());
            if (packetSupplier == null) {
                System.out.println("‚ùå [Packet] –ù–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–∏–ø –ø–∞–∫–µ—Ç–∞: '" + type + "'");
                return null;
            }

            Packet packet = packetSupplier.apply(type.equals(ErrorPacket.type) ? reader.readLine() : "");
            packet.readBody(reader);

            // üîé –ß—Ç–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–∞–∫–µ—Ç–∞
            String endSignal = reader.readLine();
            if (endSignal == null) {
                System.out.println("‚ùå [Packet] –ü–∞–∫–µ—Ç –æ–±–æ—Ä–≤–∞–Ω –∏–ª–∏ –º–∞—Ä–∫–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–µ –ø–æ–ª—É—á–µ–Ω.");
                return null;
            }

            System.out.println("üîé [Packet] –ü—Ä–æ—á–∏—Ç–∞–Ω –º–∞—Ä–∫–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: '" + endSignal + "'");

            if (!END_MARKER.equals(endSignal.trim())) {
                System.out.println("‚ùå [Packet] –ü–∞–∫–µ—Ç –Ω–µ –∑–∞–≤–µ—Ä—à—ë–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –û–∂–∏–¥–∞–ª—Å—è –º–∞—Ä–∫–µ—Ä '###END###'.");
                return null;
            }

            System.out.println("‚úÖ [Packet] –ü–∞–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω: " + packet.getType());
            return packet;
        } catch (Exception x) {
            System.out.println("‚ùå [Packet] –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ø–∞–∫–µ—Ç–∞: " + x.getMessage());
            x.printStackTrace();
            return null;
        }
    }

    public String readText(BufferedReader reader) throws Exception {
        StringBuilder text = new StringBuilder();
        while (true) {
            var s = reader.readLine();
            if (s == null || s.trim().equals(END_MARKER)) break; // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –∏ –¥–ª–∏–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

            if (text.length() > 0) {
                text.append("\n");
            }
            text.append(s);
        }

        System.out.println("üì© [Packet] –ü—Ä–æ—á–∏—Ç–∞–Ω —Ç–µ–∫—Å—Ç: " + text.toString());
        return text.toString();
    }
}
