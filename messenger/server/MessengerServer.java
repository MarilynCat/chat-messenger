package server;

import java.io.*;
import java.net.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class MessengerServer {

	// –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π (–ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤)
	private static final ArrayList<Session> sessions = new ArrayList<>();

	// Singleton —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–µ—Ä–∞
	private static MessengerServer instance;

	public MessengerServer() {
		instance = this;
	}

	public static MessengerServer getInstance() {
		if (instance == null) {
			instance = new MessengerServer();
		}
		return instance;
	}

	public static void main(String[] args) {
		int port = 20000;
		if (args.length > 0) {
			try {
				port = Integer.parseInt(args[0]);
			} catch (NumberFormatException e) {
				System.out.println("‚ùóÔ∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ—Ä—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: " + port);
			}
		}

		Correspondent.registerCorrespondent(new Correspondent(1, "User1", "password1"));
		Correspondent.registerCorrespondent(new Correspondent(2, "User2", "password2"));
		Correspondent.registerCorrespondent(new Correspondent(3, "User3", "password3"));

		try (ServerSocket serverSocket = new ServerSocket(port)) {
			new Thread(new Dispatcher()).start();

			System.out.println("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É " + port + ". –û–∂–∏–¥–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...");

			while (true) {
				Socket socket = serverSocket.accept();
				Session newSession = new Session(socket);

				System.out.println("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ");
				sessions.add(newSession); // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é –≤ —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π
				newSession.start();  // onClientConnected —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ Session –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
			}

		} catch (BindException e) {
			System.out.println("‚ùå –û—à–∏–±–∫–∞: –ü–æ—Ä—Ç —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –¥–≤–∞–∂–¥—ã.");
		} catch (Exception ex) {
			System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É " + port + ": " + ex.getMessage());
			ex.printStackTrace();
		}
	}

	public void sendUserList() {
		ListPacket listPacket = new ListPacket();
		System.out.println("üìã [MessengerServer] –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...");

		for (Correspondent c : Correspondent.getAllCorrespondents()) {
			listPacket.addItem(c.getId(), c.getLogin());
			System.out.println("‚ûï –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–æ–∫: " + c.getLogin());
		}

		if (listPacket.items.isEmpty()) {
			System.out.println("‚ùóÔ∏è [MessengerServer] –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç!");
			return;
		}

		for (Session session : getActiveSessions()) {
			if (!session.getSocket().isClosed()) {
				session.sendPacket(listPacket);
				System.out.println("üì§ [MessengerServer] –ü–∞–∫–µ—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É ID: " + session.getCorrespondentId());
			} else {
				System.out.println("‚ùóÔ∏è [MessengerServer] –°–æ–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç. –ü–∞–∫–µ—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É ID: " + session.getCorrespondentId());
			}
		}
	}



	public static void removeSession(Session session) {
		System.out.println("üîÑ [MessengerServer] –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ ID: " + session.getCorrespondentId());
		sessions.remove(session);
		cleanInactiveSessions();
		MessengerServer.getInstance().sendUserList();
		System.out.println("üõë [MessengerServer] –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è. ID: " + session.getCorrespondentId());
	}

	private static void cleanInactiveSessions() {
		System.out.println("üßπ [MessengerServer] –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π...");
		sessions.removeIf(session -> !session.isAlive());
	}

	public static List<Session> getActiveSessions() {
		System.out.println("üîé [MessengerServer] –ó–∞–ø—Ä–æ—à–µ–Ω —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: " + sessions.size());
		return Collections.unmodifiableList(sessions);
	}
}
