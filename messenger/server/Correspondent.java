package server;

import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.List;
import java.util.ArrayList;

public class Correspondent {
    private final int id;
    private final String login;
    private final String password; // –ü–æ–ª–µ –¥–ª—è –ø–∞—Ä–æ–ª—è

    public Session activeSession;
    private final List<MessagePacket> offlineMessages = new ArrayList<>();  // –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ñ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏–π

    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –ø–∞—Ä–æ–ª–µ–º
    public Correspondent(int id, String login, String password) {
        this.id = id;
        this.login = login;
        this.password = password;
    }

    // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –∏ –ª–æ–≥–∏–Ω–∞
    public int getId() {
        return id;
    }

    public String getLogin() {
        return login;
    }

    // ==============================
    // üîí –°–∏—Å—Ç–µ–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    // ==============================
    private static final Map<Integer, Correspondent> correspondentById = new HashMap<>();
    private static final Map<String, Correspondent> correspondentByLogin = new HashMap<>();

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    public static void registerCorrespondent(Correspondent c) {
        correspondentById.put(c.id, c);
        correspondentByLogin.put(c.login, c);
    }

    // –ü–æ–∏—Å–∫ –ø–æ ID
    public static Correspondent getCorrespondent(int id) {
        return correspondentById.get(id);
    }

    // –ü–æ–∏—Å–∫ –ø–æ –ª–æ–≥–∏–Ω—É
    public static Correspondent getCorrespondent(String login) {
        return correspondentByLogin.get(login);
    }

    // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    public static Collection<Correspondent> getAllCorrespondents() {
        return Collections.unmodifiableCollection(correspondentById.values());
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è
    public static boolean validateUser(String login, String password) {
        Correspondent correspondent = correspondentByLogin.get(login);
        if (correspondent != null && correspondent.password.equals(password)) {
            System.out.println("‚úÖ [Correspondent] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: " + login);
            return true;
        } else {
            System.out.println("‚ùå [Correspondent] –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –¥–ª—è: " + login);
            return false;
        }
    }

    // ==============================
    // –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ñ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏–π
    // ==============================
    public void storeOfflineMessage(MessagePacket msg) {
        offlineMessages.add(msg);
        System.out.println("‚ö†Ô∏è [Correspondent] –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + login);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Ñ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏–π
    public List<MessagePacket> getOfflineMessages() {
        return offlineMessages;
    }

    // –û—á–∏—Å—Ç–∫–∞ –æ—Ñ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ –∏—Ö –¥–æ—Å—Ç–∞–≤–∫–∏
    public void clearOfflineMessages() {
        offlineMessages.clear();
    }
}
