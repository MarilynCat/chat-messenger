package server;

import java.util.*;

public class Correspondent {
    private final int id;
    private final String login;
    private final String password;

    public Session activeSession;
    private final List<MessagePacket> offlineMessages = new ArrayList<>();
    private final List<MessagePacket> sessionMessages = new ArrayList<>(); // üÜï –∏—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏


    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –ø–∞—Ä–æ–ª–µ–º
    public Correspondent(int id, String login, String password) {
        this.id = id;
        this.login = login;
        this.password = password;
    }

    // –ì–µ—Ç—Ç–µ—Ä—ã
    public int getId() {
        return id;
    }

    public String getLogin() {
        return login;
    }

    // ==============================
    // üîí –°–∏—Å—Ç–µ–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    // ==============================
    private static final Map<Integer, Correspondent> correspondentById = new HashMap<>();
    private static final Map<String, Correspondent> correspondentByLogin = new HashMap<>();

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏)
    static {
        registerCorrespondent(new Correspondent(1, "User1", "password1"));
        registerCorrespondent(new Correspondent(2, "User2", "password2"));
        registerCorrespondent(new Correspondent(3, "User3", "password3"));
        System.out.println("‚úÖ [Correspondent] –ë–∞–∑–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.");
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    public static void registerCorrespondent(Correspondent c) {
        correspondentById.put(c.id, c);
        correspondentByLogin.put(c.login, c);
    }

    // –ü–æ–∏—Å–∫ –ø–æ ID
    public static Correspondent getCorrespondent(int id) {
        return correspondentById.get(id);
    }

    // –ü–æ–∏—Å–∫ –ø–æ –ª–æ–≥–∏–Ω—É
    public static Correspondent getCorrespondent(String login) {
        if (correspondentByLogin.containsKey(login)) {
            return correspondentByLogin.get(login);
        }
        System.out.println("‚ùóÔ∏è [Correspondent] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + login + " –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        return null;
    }

    // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    public static Collection<Correspondent> getAllCorrespondents() {
        return Collections.unmodifiableCollection(correspondentById.values());
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è
    public static boolean validateUser(String login, String password) {
        Correspondent correspondent = correspondentByLogin.get(login);
        if (correspondent != null && correspondent.password.equals(password)) {
            System.out.println("‚úÖ [Correspondent] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: " + login);
            return true;
        } else {
            System.out.println("‚ùå [Correspondent] –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –¥–ª—è: " + login);
            return false;
        }
    }

    // ==============================
    // üîÑ –û—Ñ—Ñ–ª–∞–π–Ω-—Å–æ–æ–±—â–µ–Ω–∏—è
    // ==============================
    public void storeOfflineMessage(MessagePacket msg) {
        offlineMessages.add(msg);
        System.out.println("‚ö†Ô∏è [Correspondent] –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + login);
    }

    public List<MessagePacket> getOfflineMessages() {
        return new ArrayList<>(offlineMessages); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–ø–∏—é –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    }

    public void clearOfflineMessages() {
        offlineMessages.clear();
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ñ—Ñ–ª–∞–π–Ω-—Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
    public void deliverOfflineMessages() {
        if (!offlineMessages.isEmpty() && activeSession != null) {
            for (MessagePacket msg : offlineMessages) {
                activeSession.sendPacket(msg);
                System.out.println("üì§ [Correspondent] –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –æ—Ñ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏–µ: " + msg.text);
            }
            clearOfflineMessages();
        }
    }

    public void addToSessionHistory(MessagePacket msg) {
        sessionMessages.add(msg);
        System.out.println("üóÇ [Correspondent] –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏—Å—Ç–æ—Ä–∏—é —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + login);
    }

    public List<MessagePacket> getSessionMessages() {
        return new ArrayList<>(sessionMessages); // –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∫–æ–ø–∏—è
    }

}
